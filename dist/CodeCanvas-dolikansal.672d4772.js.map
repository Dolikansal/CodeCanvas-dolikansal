{"mappings":"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","sources":["script.js"],"sourcesContent":["\n\nconst sampleProjects = [\n  {\n    id: 1,\n    title: 'Analog Clock Web App',\n    description: 'A beautifully designed analog clock that updates in real-time using vanilla JavaScript, HTML, and CSS. Perfect for understanding basic DOM manipulation and CSS transformations.',\n    repoUrl: 'https://github.com/snehhhcodes/Analog-Clock-Web-App',\n    demoUrl: 'https://snehhhcodes.github.io/Analog-Clock-Web-App/',\n    difficulty: 'beginner',\n    upvotes: 15,\n    hasDemo: true,\n    hasReadme: true,\n    previewImage: 'assets/Preview.png',\n    tags: ['JavaScript', 'CSS', 'HTML', 'DOM']\n  },\n  {\n    id: 2,\n    title: 'Weather Dashboard',\n    description: 'A responsive weather application with beautiful animations and detailed forecasts. Features location-based weather data and interactive charts.',\n    repoUrl: 'https://github.com/Shivin1016/weatherApp',\n    demoUrl: 'https://shivin1016.github.io/weatherApp/',\n    difficulty: 'intermediate',\n    upvotes: 28,\n    hasDemo: true,\n    hasReadme: true,\n    previewImage: \"assets/weatherPreview.png\",\n    tags: ['JavaScript','HTML', 'CSS', \"API\"]\n  },\n  {\n    id: 3,\n    title: 'Task Management App',\n    description: 'A full-featured task management application with drag-and-drop functionality, real-time updates, and team collaboration features.',\n    repoUrl: 'https://github.com/example/task-manager',\n    demoUrl: null,\n    difficulty: 'advanced',\n    upvotes: 42,\n    hasDemo: false,\n    hasReadme: true,\n    previewImage: null,\n    tags: ['Vue.js', 'Drag & Drop', 'WebSocket', 'PWA']\n  },\n  {\n    id: 4,\n    title: 'Portfolio Website',\n    description: 'A modern, responsive portfolio website with smooth animations, dark mode toggle, and optimized performance. Great starting point for personal branding.',\n    repoUrl: 'https://github.com/Nsanjayboruds/Template-hub',\n    demoUrl: 'https://templateshub.netlify.app/',\n    difficulty: 'intermediate',\n    upvotes: 31,\n    hasDemo: true,\n    hasReadme: true,\n    previewImage: 'assets/templates.png',\n    tags: ['HTML', 'CSS', 'JavaScript', 'Responsive']\n  },\n  {\n    id: 5,\n    title: 'Expense Tracker App',\n    description: 'A simple and intuitive expense tracker app to monitor daily spending, manage budgets, and gain financial insights.',\n    repoUrl: 'https://github.com/DineshPabboju/Expense-Tracker-App',\n    demoUrl: 'https://expense-tracker-app-04.netlify.app/',\n    difficulty: 'intermediate',\n    upvotes: 21,\n    hasDemo: true,\n    hasReadme: false,\n    previewImage: 'assets/Expense-Tracker-Preview.png',\n    tags: ['HTML', 'CSS', 'JavaScript', 'Responsive']\n  },\n  {\n    id: 6,\n    title: 'IMDb Clone',\n    description: 'A responsive IMDb clone showcasing popular movies with detailed info using TMDb API and modern frontend technologies.',\n    repoUrl: 'https://github.com/Jils31/IMDB-clone',\n    demoUrl: 'https://imdb-clone-seven-virid.vercel.app/',\n    difficulty: 'intermediate',\n    upvotes: 21,\n    hasDemo: true,\n    hasReadme: true,\n    previewImage: 'assets/image.png',\n    tags: ['REACT', 'Tailwind CSS', 'Responsive', 'React-Router DOM']\n  },\n  {\n    id: 7,\n    title: 'PassWord Generator',\n    description: 'Enable user to create password with specified length and character (uppercase, lowercase , special character and numbers) to meet diverse securing requirements.',\n    repoUrl: 'https://github.com/Sitaram8472/Generate-password',\n    demoUrl: 'https://password-generator021.netlify.app/',\n    difficulty: 'advanced',\n    upvotes: 42,\n    hasDemo: true,\n    hasReadme: true,\n    previewImage: 'assets/GeneratePassword.png',\n    tags: ['HTML', 'CSS', 'JavaScript', 'Responsive']\n  },\n  {\n  id: 8,\n  title: 'Unit Converter',\n  description: 'A simple and responsive unit converter that allows users to convert between length, weight, and temperature with real-time results.',\n  repoUrl: 'https://github.com/Bhavya0420/UnitConverter',\n  demoUrl: 'https://bhavya0420.github.io/UnitConverter/',\n  difficulty: 'intermediate',\n  upvotes: 20,\n  hasDemo: true,\n  hasReadme: true,\n  previewImage: 'assets/UnitConverter.png',\n  tags: ['HTML', 'CSS', 'JavaScript', 'Responsive']\n}\n\n];\n\n\n        // Store the current projects array\n        let currentProjects = [...sampleProjects];\n        let selectedTag = null;\n\n        // Voting system\n        class VotingSystem {\n            constructor() {\n                this.userFingerprint = this.generateUserFingerprint();\n                this.votes = this.loadVotes();\n                this.initializeProjectVotes();\n            }\n\n            generateUserFingerprint() {\n                let fingerprint = localStorage.getItem('userFingerprint');\n                if (!fingerprint) {\n                    fingerprint = 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n                    localStorage.setItem('userFingerprint', fingerprint);\n                }\n                return fingerprint;\n            }\n\n            loadVotes() {\n                const savedVotes = localStorage.getItem('projectVotes');\n                return savedVotes ? JSON.parse(savedVotes) : {};\n            }\n\n            saveVotes() {\n                localStorage.setItem('projectVotes', JSON.stringify(this.votes));\n            }\n\n            initializeProjectVotes() {\n                sampleProjects.forEach(project => {\n                    if (!this.votes[project.id]) {\n                        this.votes[project.id] = {\n                            count: project.upvotes || 0,\n                            voters: []\n                        };\n                    }\n                });\n                this.saveVotes();\n            }\n\n            canUserVote(projectId) {\n                const projectVotes = this.votes[projectId];\n                return projectVotes && !projectVotes.voters.includes(this.userFingerprint);\n            }\n\n            upvoteProject(projectId) {\n                if (!this.canUserVote(projectId)) {\n                    return { success: false, message: 'You have already voted for this project!' };\n                }\n\n                this.votes[projectId].count++;\n                this.votes[projectId].voters.push(this.userFingerprint);\n                this.saveVotes();\n\n                // Update the project in currentProjects array\n                const project = currentProjects.find(p => p.id === projectId);\n                if (project) {\n                    project.upvotes = this.votes[projectId].count;\n                }\n\n                // Update the project in sampleProjects array\n                const sampleProject = sampleProjects.find(p => p.id === projectId);\n                if (sampleProject) {\n                    sampleProject.upvotes = this.votes[projectId].count;\n                }\n\n                return { success: true, newCount: this.votes[projectId].count };\n            }\n\n            getProjectVotes(projectId) {\n                return this.votes[projectId] ? this.votes[projectId].count : 0;\n            }\n\n            hasUserVoted(projectId) {\n                const projectVotes = this.votes[projectId];\n                return projectVotes && projectVotes.voters.includes(this.userFingerprint);\n            }\n        }\n\n        // Initialize voting system\n        const votingSystem = new VotingSystem();\n\n        //Store all the unique tags\n        const allTagSet = new Set();\n        sampleProjects.forEach(project => {\n            project.tags.forEach(tag => allTagSet.add(tag));\n        })\n\n        const uniqueTags = Array.from(allTagSet);\n\n        // DOM elements\n        const projectsContainer = document.getElementById('projects-container');\n        const loadingElement = document.getElementById('loading');\n        const emptyStateElement = document.getElementById('empty-state');\n        const sortByFilter = document.getElementById('sort-by');\n        const difficultyFilter = document.getElementById('difficulty');\n        const hasDemoFilter = document.getElementById('has-demo');\n        const applyFiltersBtn = document.getElementById('apply-filters');\n        const resetFiltersBtn = document.getElementById('reset-filters');\n        const searchInput = document.getElementById('search-input');\n        const clearSearchBtn = document.getElementById('clear-search');\n        const tagFiltersContainer = document.querySelector('.tag-filters');\n\n        uniqueTags.forEach(tag => {\n            const button = document.createElement('button');\n            button.textContent = tag;\n            button.classList.add('tag-filter-btn')\n            button.dataset.tag = tag\n            tagFiltersContainer.appendChild(button)\n        })\n\n        // Initialize the app\n        function init() {\n            setTimeout(() => {\n                hideLoading();\n                renderProjects(currentProjects);\n                setupEventListeners();\n                initializeTagFilterListener();\n            }, 1000); // Simulate loading time\n        }\n\n        // Hide loading spinner\n        function hideLoading() {\n            loadingElement.style.display = 'none';\n            projectsContainer.style.display = 'grid';\n        }\n\n        // Setup event listeners\n        function setupEventListeners() {\n            applyFiltersBtn.addEventListener('click', applyFilters);\n            resetFiltersBtn.addEventListener('click', resetFilters);\n            sortByFilter.addEventListener('change', applyFilters);\n            \n            // Search functionality\n            searchInput.addEventListener('input', handleSearch);\n            clearSearchBtn.addEventListener('click', clearSearch);\n            \n            // Smooth scroll for explore button\n            document.querySelector('a[href=\"#projects\"]').addEventListener('click', (e) => {\n                e.preventDefault();\n                document.getElementById('projects').scrollIntoView({\n                    behavior: 'smooth'\n                });\n            });\n        }\n\n        function initializeTagFilterListener() {\n            tagFiltersContainer.addEventListener('click', (e) => {\n                if (e.target.classList.contains('tag-filter-btn')) {\n                    const clickedTag = e.target.dataset.tag;\n\n                    // Toggle selection\n                    if (selectedTag === clickedTag) {\n                        selectedTag = null;\n                        e.target.classList.remove('active');\n                    } else {\n                        selectedTag = clickedTag;\n                        // Remove active from all buttons\n                        document.querySelectorAll('.tag-filter-btn').forEach(btn => btn.classList.remove('active'));\n                        e.target.classList.add('active');\n                    }\n\n                    applyFilters(); // Re-apply filters based on tag\n                }\n            });\n        }\n\n\n        // Render projects\n        function renderProjects(projects) {\n            if (projects.length === 0) {\n                projectsContainer.style.display = 'none';\n                emptyStateElement.style.display = 'block';\n                return;\n            }\n\n            // Sort projects based on selected option\n            const sortBy = sortByFilter.value;\n            const sortedProjects = [...projects].sort((a, b) => {\n                switch (sortBy) {\n                    case 'popularity':\n                        const aVotes = votingSystem.getProjectVotes(a.id);\n                        const bVotes = votingSystem.getProjectVotes(b.id);\n                        return bVotes - aVotes;\n                    \n                    case 'newest':\n                        // Since we don't have dates, sort by ID (assuming higher ID = newer)\n                        return b.id - a.id;\n                    \n                    case 'difficulty':\n                        const difficultyOrder = { 'beginner': 1, 'intermediate': 2, 'advanced': 3 };\n                        return difficultyOrder[a.difficulty] - difficultyOrder[b.difficulty];\n                    \n                    case 'alphabetical':\n                        return a.title.localeCompare(b.title);\n                    \n                    default:\n                        return 0;\n                }\n            });\n\n            emptyStateElement.style.display = 'none';\n            projectsContainer.style.display = 'grid';\n            \n            projectsContainer.innerHTML = sortedProjects.map((project, index) => {\n                const hasVoted = votingSystem.hasUserVoted(project.id);\n                const canVote = votingSystem.canUserVote(project.id);\n                const voteCount = votingSystem.getProjectVotes(project.id);\n                const isTopRanked = sortBy === 'popularity' && index < 3 && voteCount > 0;\n                \n                return `\n                <div class=\"project-card ${isTopRanked ? 'top-ranked' : ''}\">\n                    ${isTopRanked ? `<div class=\"rank-badge\">#${index + 1}</div>` : ''}\n                    ${project.previewImage \n                        ? `<img src=\"${project.previewImage}\" alt=\"${project.title}\" class=\"project-image\" \n                             onerror=\"this.outerHTML='<div class=\\\\'project-placeholder\\\\'>No Preview Available</div>'\">` \n                        : '<div class=\"project-placeholder\">No Preview Available</div>'\n                    }\n                    \n                    <div class=\"project-header\">\n                        <h3 class=\"project-title\">${project.title}</h3>\n                        <a href=\"${project.repoUrl}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"repo-link\">\n                            <i class=\"fab fa-github\"></i>\n                        </a>\n                    </div>\n                    \n                    <span class=\"difficulty-badge difficulty-${project.difficulty}\">\n                        ${project.difficulty.charAt(0).toUpperCase() + project.difficulty.slice(1)}\n                    </span>\n                    \n                    <p class=\"project-description\">${project.description}</p>\n                    \n                    <div class=\"project-meta\">\n                        ${project.hasDemo \n                            ? '<i class=\"fas fa-external-link-alt meta-icon\"></i> Live Demo Available'\n                            : '<i class=\"fas fa-code meta-icon\"></i> Code Only'\n                        }\n                        ${project.hasReadme \n                            ? ' • <i class=\"fas fa-file-alt meta-icon\"></i> README Included'\n                            : ' • <i class=\"fas fa-exclamation-triangle meta-icon\"></i> No README'\n                        }\n                    </div>\n\n                    <div class=\"project-tags\">\n                        ${project.tags.map((item, index)=>`\n                            <span class=\"tag-badge\">${item}</span>\n                        `).join('')}\n                    </div>\n                    \n                    <div class=\"upvote-section\">\n                        ${project.hasDemo && project.demoUrl \n                            ? `<a href=\"${project.demoUrl}\" target=\"_blank\" class=\"btn-primary\" style=\"text-decoration: none; padding: 0.5rem 1rem; font-size: 0.875rem;\">\n                                <i class=\"fas fa-external-link-alt\"></i> View Demo\n                               </a>`\n                            : '<span></span>'\n                        }\n                        <button class=\"upvote-btn ${hasVoted ? 'voted' : ''}\" \n                                onclick=\"handleUpvote(${project.id})\" \n                                ${!canVote ? 'disabled' : ''}\n                                title=\"${hasVoted ? 'You have already voted for this project' : 'Click to upvote this project'}\">\n                            <i class=\"fas fa-arrow-up\"></i>\n                            <span>${voteCount}</span>\n                        </button>\n                    </div>\n                </div>\n            `;\n            }).join('');\n        }\n\n        // Handle upvote\n        function handleUpvote(projectId) {\n            const result = votingSystem.upvoteProject(projectId);\n            \n            if (!result.success) {\n                // Show error message\n                showNotification(result.message, 'error');\n                return;\n            }\n\n            // Show success message\n            showNotification('Vote added successfully!', 'success');\n            \n            // Re-render projects to update the upvote count and sorting\n            renderProjects(applyCurrentFilters());\n            \n            // Add visual feedback\n            const button = event.target.closest('.upvote-btn');\n            if (button) {\n                button.style.transform = 'scale(1.2)';\n                setTimeout(() => {\n                    button.style.transform = 'scale(1)';\n                }, 200);\n            }\n        }\n\n        // Show notification function\n        function showNotification(message, type = 'info') {\n            // Remove existing notifications\n            const existingNotification = document.querySelector('.vote-notification');\n            if (existingNotification) {\n                existingNotification.remove();\n            }\n\n            // Create notification element\n            const notification = document.createElement('div');\n            notification.className = `vote-notification ${type}`;\n            notification.innerHTML = `\n                <i class=\"fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}\"></i>\n                <span>${message}</span>\n            `;\n            \n            // Add to body\n            document.body.appendChild(notification);\n            \n            // Show notification\n            setTimeout(() => {\n                notification.classList.add('show');\n            }, 10);\n            \n            // Hide notification after 3 seconds\n            setTimeout(() => {\n                notification.classList.remove('show');\n                setTimeout(() => {\n                    if (notification.parentNode) {\n                        notification.remove();\n                    }\n                }, 300);\n            }, 3000);\n        }\n\n        // Apply filters\n        function applyFilters() {\n            const filteredProjects = applyCurrentFilters();\n            renderProjects(filteredProjects);\n        }\n\n        // Apply current filter settings\n        function applyCurrentFilters() {\n            let filtered = [...sampleProjects];\n\n            const difficulty = difficultyFilter.value;\n            const needsDemo = hasDemoFilter.checked;\n            const searchTerm = searchInput.value.toLowerCase().trim();\n\n            // Apply search filter\n            if (searchTerm) {\n                filtered = filtered.filter(project => {\n                    const titleMatch = project.title.toLowerCase().includes(searchTerm);\n                    const descriptionMatch = project.description.toLowerCase().includes(searchTerm);\n                    const tagsMatch = project.tags.some(tag => tag.toLowerCase().includes(searchTerm));\n                    return titleMatch || descriptionMatch || tagsMatch;\n                });\n            }\n\n            if (difficulty !== 'all') {\n                filtered = filtered.filter(p => p.difficulty === difficulty);\n            }\n\n            if (needsDemo) {\n                filtered = filtered.filter(p => p.hasDemo);\n            }\n\n            if(selectedTag){\n                filtered = filtered.filter(project => project.tags.includes(selectedTag));\n            }\n\n            return filtered;\n        }\n\n        // Handle search input with debounce\n        let searchTimeout;\n        function handleSearch() {\n            const searchTerm = searchInput.value.trim();\n            \n            // Show/hide clear button\n            if (searchTerm) {\n                clearSearchBtn.style.display = 'flex';\n            } else {\n                clearSearchBtn.style.display = 'none';\n            }\n            \n            // Clear previous timeout\n            clearTimeout(searchTimeout);\n            \n            // Debounce search to improve performance\n            searchTimeout = setTimeout(() => {\n                const filteredProjects = applyCurrentFilters();\n                renderProjects(filteredProjects);\n            }, 300);\n        }\n\n        // Clear search\n        function clearSearch() {\n            searchInput.value = '';\n            clearSearchBtn.style.display = 'none';\n            const filteredProjects = applyCurrentFilters();\n            renderProjects(filteredProjects);\n        }\n\n        // Reset filters\n        function resetFilters() {\n            sortByFilter.value = 'popularity';\n            difficultyFilter.value = 'all';\n            hasDemoFilter.checked = false;\n            searchInput.value = '';\n            clearSearchBtn.style.display = 'none';\n            selectedTag = null;\n            document.querySelectorAll('.tag-filter-btn').forEach(btn => btn.classList.remove('active'));\n            renderProjects(sampleProjects);\n        }\n\n        // Make handleUpvote globally available\n        window.handleUpvote = handleUpvote;\n\n        // Start the app\n        document.addEventListener(\"DOMContentLoaded\", init);\n        // Adding m own version and also added a feature where the input field will get clear on clicking the send message button\n        function validateForm() {\n            const name = document.getElementById(\"name\").value.trim();\n            const lastname = document.getElementById(\"lastname\").value.trim();\n            const email = document.getElementById(\"email\").value.trim();\n            const message = document.getElementById(\"message\").value.trim();\n            if (!name || !lastname || !email || !message) {\n                alert(\"Please fill in all fields.\");\n                return false;\n            }\n            if (name.length < 4) {\n                alert(\"First Name must be at least 4 letters.\");\n                return false;\n            }\n            if (lastname.length < 4) {\n                alert(\"Last Name must be at least 4 letters.\");\n                return false;\n            }\n            const emailPattern = /^[^ ]+@[^ ]+\\.[a-z]{2,3}$/;\n            if (!email.match(emailPattern)) {\n                alert(\"Please enter a valid email.\");\n                return false;\n            }\n            // Message must have at least 3 words\n            const wordCount = message.split(/\\s+/).filter(Boolean).length;\n            if (wordCount < 3) {\n                alert(\"Message must be at least 3 words.\");\n                return false;\n            }\n\n            // Show the overlay\n            const overlay = document.getElementById(\"message-overlay\");\n            overlay.style.opacity = \"1\";\n            overlay.style.pointerEvents = \"auto\";\n\n            // Hide the overlay after 3 seconds\n            setTimeout(() => {\n                overlay.style.opacity = \"0\";\n                overlay.style.pointerEvents = \"none\";\n            }, 3000);\n\n            // Clear form\n            document.getElementById(\"contact-form\").reset();\n\n            return false; // Prevent actual form submission\n        }\n\n            const toggle = document.getElementById('darkModeToggle');\n            const body = document.body;\n            const icon = document.getElementById('themeIcon');\n\n            // Load preference\n            const savedTheme = localStorage.getItem('theme');\n                if (savedTheme === 'dark') {\n                    body.classList.add('dark-theme');\n                    icon.textContent = '☀️'; // Sun in dark mode\n                } else {\n                    icon.textContent = '🌙'; // Moon in light mode\n                }\n\n            toggle.addEventListener('click', () => {\n                body.classList.toggle('dark-theme');\n                const theme = body.classList.contains('dark-theme') ? 'dark' : 'light';\n                localStorage.setItem('theme', theme);\n\n                // Update icon\n                icon.textContent = theme === 'dark' ? '☀️' : '🌙';\n            });\n\n            //Review Section JS\n            const swiper = new Swiper(\".review-swiper\", {\n                loop: true, \n                slidesPerView: 1, \n                spaceBetween: 20, \n                navigation: {\n                nextEl: \".swiper-button-next\",\n                prevEl: \".swiper-button-prev\",\n                },\n                keyboard: {\n                enabled: true,\n                },\n                mousewheel: {\n                forceToAxis: true,\n                },\n                grabCursor: true,\n                speed: 600,\n        });\n    //Scroll to top button functionality\n    const scrollToTopBtn = document.getElementById(\"scrollToTopBtn\");\n\n// Show button when user scrolls down\nwindow.addEventListener(\"scroll\", () => {\n    scrollToTopBtn.style.display = window.scrollY > 300 ? \"block\" : \"none\";\n});\n\n// Scroll to top smoothly\nscrollToTopBtn.addEventListener(\"click\", () => {\n    window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n    });\n});\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const faders = document.querySelectorAll('.fade-in');\n\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('animate');\n        observer.unobserve(entry.target);\n      }\n    });\n  }, { threshold: 0.1 });\n\n  faders.forEach(fade => observer.observe(fade));\n});\nentries.forEach((entry, index) => {\n  if (entry.isIntersecting) {\n    setTimeout(() => {\n      entry.target.classList.add('animate');\n    }, index * 100); // 100ms delay between cards\n    observer.unobserve(entry.target);\n  }\n});\n\n\n  const reviewSwiper = new Swiper(\".review-swiper\", {\n    loop: true,\n    autoplay: {\n      delay: 4000, // 4 seconds per slide\n      disableOnInteraction: false, // keeps autoplay after manual swipe\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    speed: 700, // smooth transition\n  });\n"],"names":[],"version":3,"file":"CodeCanvas-dolikansal.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}